;(function ($, window, document, undefined) {
  var pluginName = "equalize",
    defaults = {
      selector: '.js-equalize-me',
      responsive: false
    };

  function Plugin(element, options) {
    this.element = element;
    this.$element = $(element);

    this.options = $.extend({}, defaults, options);

    this._defaults = defaults;
    this._name = pluginName;

    this.initialize();
  }

  Plugin.prototype = {
    initialize: function() {
      this.cols = this.$element.find(this.options.selector);

      if(this.options.responsive){
        this.timeout;
        $(window).resize($.proxy(this.onResize,this)).resize();
      } else {
        this.equalize();
      }

      this.cols.find('img').on('load', function() {
        setTimeout(function() {
          $.proxy(this.equalize, this);
        }, 1000);
      });
    },

    onResize: function(){
      clearTimeout(this.timeout);
      this.timeout = setTimeout($.proxy(this.equalize,this),200);
    },

    equalize: function(){
      this.cols.css('height', 'auto');

      setTimeout($.proxy(function(){
        this.cols.outerHeight(this.max());
      }, this), 1);
    },

    max: function(){
      var height = 0;
      var maxHeight = 0;

      for(var i = 0; i < this.cols.length; i++){
        height = $(this.cols[i]).outerHeight();

        if(height > maxHeight){
          maxHeight = height;
        }
      }

      return maxHeight;
    }
  };

  $.fn[pluginName] = function (options) {
    return this.each(function () {
      if (!$.data(this, "plugin_" + pluginName)) {
        $.data(this, "plugin_" + pluginName, new Plugin(this, options));
      }
    });
  };

})(jQuery, window, document);
