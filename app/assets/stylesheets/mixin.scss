// @mixin respond-to($media) {
//   @if $media == mobile {
//     @media only screen and (max-width: 320px) { @content; }
//   }
//   @else if $media == medium {
//     @media only screen and (min-width: 321px) and (max-width: 1024px) { @content; }
//   }
//   @else if $media == wide {
//     @media only screen and (min-width: 1024px) { @content; }
//   }
// }

@mixin respond-to($media) {
  @if $media == small {
    @media #{$small} { @content; }
  }
  @else if $media == medium {
    @media #{$medium} { @content; }
  }
  @else if $media == large {
    @media #{$large-screen} { @content; }
  }
  @else if $media == landscape {
    @media #{$landscape} { @content; }
  }
  @else if $media == portrait {
    @media #{$portrait} { @content; }
  }
}


.clearfix {
  zoom:1;
  &:before, &:after {
    content: "\0020";
    display: block;
    height: 0;
    overflow: hidden;
  }
  &:after {
    clear: both;
  }
}

@mixin transition($settings...) {
  -webkit-transition: $settings;
     -moz-transition: $settings;
      -ms-transition: $settings;
       -o-transition: $settings;
          transition: $settings;
}

@mixin transition-delay($settings...) {
  -webkit-transition-delay: $settings;
     -moz-transition-delay: $settings;
      -ms-transition-delay: $settings;
       -o-transition-delay: $settings;
          transition-delay: $settings;
}

@mixin animation($settings...) {
  -webkit-animation: $settings;
     -moz-animation: $settings;
      -ms-animation: $settings;
       -o-animation: $settings;
          animation: $settings;
}

@mixin translateY($value) {
  -webkit-transform: translateY($value);
     -moz-transform: translateY($value);
      -ms-transform: translateY($value);
       -o-transform: translateY($value);
          transform: translateY($value);
}

@mixin translateZ($value) {
  -webkit-transform: translateZ($value);
     -moz-transform: translateZ($value);
      -ms-transform: translateZ($value);
       -o-transform: translateZ($value);
          transform: translateZ($value);
}

@mixin scale($value) {
  -webkit-transform: scale($value);
     -moz-transform: scale($value);
      -ms-transform: scale($value);
       -o-transform: scale($value);
          transform: scale($value);
}

@mixin box-shadow($settings) {
  -webkit-box-shadow: $settings;
     -moz-box-shadow: $settings;
      -ms-box-shadow: $settings;
          box-shadow: $settings;

}

@mixin transform-origin($settings) {
  -webkit-transform-origin: $settings;
     -moz-transform-origin: $settings;
      -ms-transform-origin: $settings;
       -o-transform-origin: $settings;
          transform-origin: $settings;
}

@-webkit-keyframes spin360 { 100% { -webkit-transform: rotate(360deg); } }
   @-moz-keyframes spin360 { 100% { -moz-transform: rotate(360deg); } }
    @-ms-keyframes spin360 { 100% { -ms-transform: rotate(360deg); } }
        @keyframes spin360 { 100% { -webkit-transform: rotate(360deg); transform:rotate(360deg); } }

@mixin spin {
  -webkit-animation: spin360 1.5s linear infinite;
     -moz-animation: spin360 1.5s linear infinite;
      -ms-animation: spin360 1.5s linear infinite;
          animation: spin360 1.5s linear infinite;
}

@mixin columns($amount) {
  -webkit-columns: $amount;
  -moz-columns: $amount;
  columns: $amount;
}

@mixin font-heading() {
  font-family: $font-boldcnd20obl;
  text-transform: uppercase;
}

@mixin loading-spinner($size) {
  position: absolute;

  height: $size;
  width: $size;

  top: 0; right: 0; bottom: 0; left: 0;
  margin: auto;

  &:after {
    display: block;

    content: '\EB83';
    height: $size;
    width: $size;

    line-height: 1.25;

    font-family: "SSStandard";
    font-size: $size;
    content: "\EB83";

    color: #00637F;
    z-index: 999999;
    @include spin;
  }
}